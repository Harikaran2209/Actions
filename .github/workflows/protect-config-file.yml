name: Protect Config File Workflow

on:
  push:
    branches:
      - master
    paths:
      - 'Actions/config.json'
  workflow_dispatch:  # Optional manual trigger

jobs:
  protect-config:
    name: Protect config.json
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master branch
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0

      - name: Check if config.json was modified (for push trigger)
        if: github.event_name == 'push'
        id: check_diff
        run: |
          git fetch origin
          if git diff HEAD~1 HEAD --name-only | grep Actions/config.json; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip revert if file not changed (only for push)
        if: github.event_name == 'push' && steps.check_diff.outputs.changed != 'true'
        run: echo "config.json not modified, skipping revert."

      - name: Revert config.json to last known good commit (auto or manual)
        if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && steps.check_diff.outputs.changed == 'true')
        run: |
          # Get the most recent commit where config.json was last modified
          LAST_GOOD_COMMIT=$(git log -n 1 --pretty=format:%H origin/master -- Actions/config.json)
          echo "Reverting config.json to commit $LAST_GOOD_COMMIT"
          
          # Safely checkout config.json from that commit
          git checkout $LAST_GOOD_COMMIT -- Actions/config.json
          
          git config user.name "config-protect-bot"
          git config user.email "bot@example.com"
          git add Actions/config.json
          
          # Commit only if there are actual changes
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Auto-revert config.json to protected state from commit $LAST_GOOD_COMMIT"
            git push origin master
          fi
